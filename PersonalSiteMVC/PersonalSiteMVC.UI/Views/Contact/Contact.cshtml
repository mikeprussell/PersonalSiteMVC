@model PersonalSiteMVC.UI.Models.ContactViewModel

@{
    ViewBag.Title = "Contact";
}

<!-- Page Header-->
<header class="masthead" style="background-image: url('../../Content/assets/img/phone.jpg');">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="page-heading">
                    <h1>Contact Me</h1>
                    <span class="subheading">Have questions?</span>
                </div>
            </div>
        </div>
    </div>
</header>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="mb-4">
        <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-7">
                    <p>Want to get in touch? Feel free to contact me directly or fill out the form below to send me a message and I will get back to you as soon as possible!</p>
                    <p>
                        <strong>Phone:</strong> 913-980-5947 <br />
                        <strong>Email:</strong> mikeprussell@outlook.com
                    </p>
                    <div class="my-5">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <form id="contactForm">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name", placeholder = "Name" } })
                                <label for="name">Name</label>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "email", placeholder = "Email" } })
                                <label for="name">Email</label>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @id = "subject", placeholder = "Subject" } })
                                <label for="name">Subject</label>
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @id = "message", placeholder = "Message" } })
                                <label for="name">Message</label>
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <!-- Submit Button-->
                            <button type="submit" value="Submit" class="btn btn-primary" id="submitButton">Send</button>
                            @*<button class="btn btn-primary text-uppercase disabled" id="submitButton" type="submit">Send</button>*@
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@if (ViewBag.CustomerMessage != null)
{
    @*Html.Raw() will translate the HTML instead of rendering it as text*@
    <h4>@Html.Raw(ViewBag.CustomerMessage)</h4>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
